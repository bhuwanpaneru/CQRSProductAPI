// <auto-generated />
using System;
using CQRSProductAPI.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CQRSProductAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250303102928_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CQRSProductAPI.Domain.Entities.AreaMaster", b =>
                {
                    b.Property<string>("AreaId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("AREA_ID");

                    b.Property<string>("AreaCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("AREA_CODE");

                    b.Property<string>("AreaName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("AREA_NAME");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CREATED_BY");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATED_DATE");

                    b.Property<string>("PlantCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("PLANT_CODE");

                    b.Property<string>("ShopCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("SHOP_CODE");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UPDATED_BY");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UPDATED_DATE");

                    b.HasKey("AreaId");

                    b.ToTable("AREA_MASTER");
                });

            modelBuilder.Entity("CQRSProductAPI.Domain.Entities.EquipmentMaster", b =>
                {
                    b.Property<string>("EquipmentId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("EQUIPMENT_ID");

                    b.Property<int>("Age")
                        .HasColumnType("int")
                        .HasColumnName("AGE");

                    b.Property<string>("AreaCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("AREA_CODE");

                    b.Property<string>("AssetNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ASSET_NO");

                    b.Property<string>("Comments")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("COMMENTS");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CREATED_BY");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATED_DATE");

                    b.Property<string>("EquipmentCategory")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("EQUIPMENT_CATEGORY");

                    b.Property<string>("EquipmentCategory01")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("EQUIPMENT_CATEGORY-01");

                    b.Property<string>("EquipmentCategory02")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("EQUIPMENT_CATEGORY-02");

                    b.Property<string>("EquipmentCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("EQUIPMENT_CODE");

                    b.Property<string>("EquipmentName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("EQUIPMENT_NAME");

                    b.Property<string>("ImportType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("IMPORT_TYPE");

                    b.Property<string>("LineCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("LINE_CODE");

                    b.Property<string>("Maker")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("MAKER");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("PLACE");

                    b.Property<string>("PlantCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("PLANT_CODE");

                    b.Property<string>("Rank")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("RANK");

                    b.Property<string>("ShopCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("SHOP_CODE");

                    b.Property<string>("StationCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("STATION_CODE");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("STATUS");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UPDATED_BY");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UPDATED_DATE");

                    b.Property<string>("YearOfInstallation")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("YEAR_OF_INSTALLATION");

                    b.HasKey("EquipmentId");

                    b.ToTable("EQUIPMENT_MASTER");
                });

            modelBuilder.Entity("CQRSProductAPI.Domain.Entities.FaultMaster", b =>
                {
                    b.Property<string>("FaultId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("FAULT_ID");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CREATED_BY");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATED_DATE");

                    b.Property<string>("EquipmentCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("EQUIPMENT_CODE");

                    b.Property<string>("FaultDescription")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .HasColumnName("FAULT_DESCRIPTION");

                    b.Property<string>("FaultMasterCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("FAULT_MASTER_CODE");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UPDATED_BY");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UPDATED_DATE");

                    b.HasKey("FaultId");

                    b.ToTable("FAULT_MASTER");
                });

            modelBuilder.Entity("CQRSProductAPI.Domain.Entities.LineMaster", b =>
                {
                    b.Property<string>("LineId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("LINE_ID");

                    b.Property<string>("AreaCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("AREA_CODE");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CREATED_BY");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATED_DATE");

                    b.Property<string>("LineCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("LINE_CODE");

                    b.Property<string>("LineDescription")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("LINE_DISCRPTION");

                    b.Property<string>("LineName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("LINE_NAME");

                    b.Property<string>("PlantCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("PLANT_CODE");

                    b.Property<string>("ShopCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("SHOP_CODE");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UPDATED_BY");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UPDATED_DATE");

                    b.HasKey("LineId");

                    b.ToTable("LINE_MASTER");
                });

            modelBuilder.Entity("CQRSProductAPI.Domain.Entities.ManualMaster", b =>
                {
                    b.Property<string>("ManualId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("MANUAL_ID");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CREATED_BY");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATED_DATE");

                    b.Property<string>("EquipmentCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("EQUIPMENT_CODE");

                    b.Property<string>("ManualCategory")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("MANUAL_CATEGORY");

                    b.Property<string>("ManualCode")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .HasColumnName("MANUAL_CODE");

                    b.Property<byte[]>("ManualDocument")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("MANUAL_DOCUMNET");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UPDATED_BY");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UPDATED_DATE");

                    b.HasKey("ManualId");

                    b.ToTable("MANUAL_MASTER");
                });

            modelBuilder.Entity("CQRSProductAPI.Domain.Entities.PlantMaster", b =>
                {
                    b.Property<string>("PlantId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("PLANT_ID");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CREATED_BY");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATED_DATE");

                    b.Property<string>("PlantCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("PLANT_CODE");

                    b.Property<string>("PlantDescription")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("PLANT_DESCRIPTION");

                    b.Property<string>("PlantHead")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("PLANT_HEAD");

                    b.Property<string>("PlantLocation")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("PLANT_LOCATION");

                    b.Property<string>("PlantName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("PLANT_NAME");

                    b.Property<DateTime>("PlantStartYear")
                        .HasColumnType("datetime2")
                        .HasColumnName("PLANT_START_YEAR");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UPDATED_BY");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UPDATED_DATE");

                    b.HasKey("PlantId");

                    b.ToTable("PLANT_MASTER");
                });

            modelBuilder.Entity("CQRSProductAPI.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("CQRSProductAPI.Domain.Entities.ShiftMaster", b =>
                {
                    b.Property<string>("ShiftId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("SHIFT_ID");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CREATED_BY");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATED_DATE");

                    b.Property<string>("ShiftCategory")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("SHIFT_CATEGORY");

                    b.Property<string>("ShiftCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("SHIFT_CODE");

                    b.Property<DateTime>("ShiftEndTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("SHIFT_END_TIME");

                    b.Property<string>("ShiftName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("SHIFT_NAME");

                    b.Property<DateTime>("ShiftStartTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("SHIFT_START_TIME");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UPDATED_BY");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UPDATED_DATE");

                    b.HasKey("ShiftId");

                    b.ToTable("SHIFT_MASTER");
                });

            modelBuilder.Entity("CQRSProductAPI.Domain.Entities.ShopMaster", b =>
                {
                    b.Property<string>("ShopId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("SHOP_ID");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CREATED_BY");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATED_DATE");

                    b.Property<string>("PlantCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("PLANT_CODE");

                    b.Property<string>("ShopCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("SHOP_CODE");

                    b.Property<string>("ShopCostCenter")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SHOP_COST_CENTER");

                    b.Property<string>("ShopDescription")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("SHOP_DESCRIPTION");

                    b.Property<string>("ShopIncharge")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SHOP_INCHARGE");

                    b.Property<string>("ShopLocation")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("SHOP_LOCATION");

                    b.Property<string>("ShopName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("SHOP_NAME");

                    b.Property<string>("ShopSectionIncharge")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SHOP_SECTION_INCHARGE");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UPDATED_BY");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UPDATED_DATE");

                    b.HasKey("ShopId");

                    b.ToTable("SHOP_MASTER");
                });

            modelBuilder.Entity("CQRSProductAPI.Domain.Entities.SpareEquipmentMapping", b =>
                {
                    b.Property<string>("SpeqId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("SPEQ_ID");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CREATED_BY");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATED_DATE");

                    b.Property<string>("EquipmentCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("EQUIPMENT_CODE");

                    b.Property<string>("SpareCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("SPARE_CODE");

                    b.Property<string>("SpareYzaNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("SPARE_YZA_NUMBER");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UPDATED_BY");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UPDATED_DATE");

                    b.HasKey("SpeqId");

                    b.ToTable("SPARE_EQUIPMENT_MAPPINGS");
                });

            modelBuilder.Entity("CQRSProductAPI.Domain.Entities.SpareMaster", b =>
                {
                    b.Property<string>("SpareId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("SPARE_ID");

                    b.Property<string>("AreaCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("AREA_CODE");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("CATEGORY");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CREATED_BY");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATED_DATE");

                    b.Property<string>("EquipmentCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("EQUIPMENT_CODE");

                    b.Property<string>("EquipmentWarranty")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("EQUIPMENT_WARRANTY");

                    b.Property<string>("EstoreCategory")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("ESTORE_CATEGORY");

                    b.Property<string>("ImportType")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("IMPORT_TYPE");

                    b.Property<string>("LineCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("LINE_CODE");

                    b.Property<string>("Maker")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("MAKER");

                    b.Property<string>("PartDescription")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("PART_DESCRIPTION");

                    b.Property<string>("PartLocation")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("PART_LOCATION");

                    b.Property<string>("PlantCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("PLANT_CODE");

                    b.Property<string>("Quantity")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("QUANTITY");

                    b.Property<string>("ShopCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("SHOP_CODE");

                    b.Property<string>("SpareCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("SPARE_CODE");

                    b.Property<string>("Specification")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("SPECIFICATION");

                    b.Property<string>("Stock")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("STOCK");

                    b.Property<string>("SupplierDetails")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("SUPPLIER_DETAILS");

                    b.Property<string>("Uom")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("UOM");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UPDATED_BY");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UPDATED_DATE");

                    b.Property<string>("YzaNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("YZA_NUMBER");

                    b.HasKey("SpareId");

                    b.ToTable("SPARE_MASTER");
                });

            modelBuilder.Entity("CQRSProductAPI.Domain.Entities.StationMaster", b =>
                {
                    b.Property<string>("StationId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("STATION_ID");

                    b.Property<string>("AreaCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("AREA_CODE");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CREATED_BY");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATED_DATE");

                    b.Property<string>("LineCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("LINE_CODE");

                    b.Property<string>("PlantCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("PLANT_CODE");

                    b.Property<string>("ShopCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("SHOP_CODE");

                    b.Property<string>("StationCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("STATION_CODE");

                    b.Property<string>("StationName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("STATION_NAME");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UPDATED_BY");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UPDATED_DATE");

                    b.HasKey("StationId");

                    b.ToTable("STATION_MASTER");
                });

            modelBuilder.Entity("CQRSProductAPI.Domain.Entities.TeamMaster", b =>
                {
                    b.Property<string>("TeamId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("TEAM_ID");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("CREATED_BY");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATED_DATE");

                    b.Property<string>("TeamCategory")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("TEAM_CATEGORY");

                    b.Property<string>("TeamCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("TEAM_CODE");

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("TEAM_NAME");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int")
                        .HasColumnName("UPDATED_BY");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UPDATED_DATE");

                    b.HasKey("TeamId");

                    b.ToTable("TEAM_MASTER");
                });
#pragma warning restore 612, 618
        }
    }
}
